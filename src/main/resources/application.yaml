server:
  port: 8081

spring:
  application:
    name: springboot-tools-demo
#   访问admin：http://localhost:8081/wallboard
  boot:
    admin:
      client:
        url: 'http://localhost:8081'
  datasource:
    url: jdbc:mysql://localhost:3306/test_db?useSSL=false&autoReconnect=true&characterEncoding=utf8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    # Druid datasource
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化大小
      initial-size: 5
      # 最小连接数
      min-idle: 10
      # 最大连接数
      max-active: 20
      # 获取连接时的最大等待时间
      max-wait: 60000
      # 一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 多久才进行一次检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置扩展插件：stat-监控统计，log4j-日志，wall-防火墙（防止SQL注入），去掉后，监控界面的sql无法统计
      filters: stat,wall
      # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效
      validation-query: SELECT 1
      # 申请连接时执行validationQuery检测连接是否有效，默认true，开启后会降低性能
      test-on-borrow: true
      # 归还连接时执行validationQuery检测连接是否有效，默认false，开启后会降低性能
      test-on-return: true
      # 申请连接时如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，默认false，建议开启，不影响性能
      test-while-idle: true
      # 是否开启 StatViewServlet
      stat-view-servlet:
        enabled: true
        # 访问监控页面 白名单，默认127.0.0.1
        allow: 127.0.0.1
        login-username: admin
        login-password: admin
      # FilterStat
      filter:
        stat:
          # 是否开启 FilterStat，默认true
          enabled: true
          # 是否开启 慢SQL 记录，默认false
          log-slow-sql: true
          # 慢 SQL 的标准，默认 3000，单位：毫秒
          slow-sql-millis: 5000
          # 合并多个连接池的监控数据，默认false
          merge-sql: false
  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use-new-id-generator-mappings: false

  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    #    password: test
    jedis:
      pool:
        min-idle: 0
        max-active: 8
        max-idle: 8
        max-wait: -1ms
    connect-timeout: 30000ms
  # h2数据库
  #  datasource:
  #    driverClassName: org.h2.Driver
  #    url: jdbc:h2:mem:dbtest
  #    username: sa
  #    password: sa
  #  h2:
  #    console:
  #      enabled: true
  #      path: /h2
  #      settings:
  #        web-allow-others: true
  #  jpa:
  #    hibernate:
  #      ddl-auto: update
  #    show-sql: true
  #  sql:
  #    init:
  #      platform: h2
  #      schema-locations: classpath:db/schema.sql
  #      data-locations: classpath:db/data.sql

  #  自定义Banner
  banner:
    charset: UTF-8
    location: classpath:templates/banner.txt

knife4j:
  enable: true
  setting:
    # default lang
    language: en-US
    # footer
    enableFooter: false
    enableFooterCustom: true
    footerCustomContent: MIT | [Java 全栈](https://pdai.tech)
    # models
    enableSwaggerModels: true
    swaggerModelName: My Models

logging:
  level:
    #  只打印info级别的日志
    root: info
  file:
    path: D:/data/logs/springboot-logback-demo
  pattern:
    file: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx'

debug: false


management:
  endpoints:
    enabled-by-default: true
    web:
      base-path: /manage
      exposure:
        include: 'info,health,env,beans,*'
  # 也可以通过代码配置自定义更多的endpoint
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
    env:
      enabled: true
    beans:
      enabled: true
